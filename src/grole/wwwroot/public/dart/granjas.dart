// Auto-generated from granjas.html.
// DO NOT EDIT.

library granjas_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'dart:json' as json;
import 'package:web_ui/web_ui.dart';
import 'package:web_ui/watcher.dart' as watcher;


// Original code


bool permite_edicion = false;
bool modo_insercion  = true;

modificar(){
  permite_edicion = !permite_edicion;
  modo_insercion  = true;
  
  watcher.dispatch();

  if (permite_edicion){
    query('#btnPermiteEdicion').value = 'Restringir';
    limpia_edits();
  }
  else{
    query('#btnPermiteEdicion').value = 'Modificar';
  }
}

class granja{
  int clave;
  String nombre;
}

List<granja> lista_granja = new List<granja>();

llena_lista(data){
  lista_granja= new List<granja>();
  List p_lista = json.parse(data);

  for (int i = 0; i <= p_lista.length - 1; i++){
    granja item = new granja();
    item.clave = p_lista[i]['clave'];
    item.nombre = p_lista[i]['nombre'];

    lista_granja.add(item);
  }

  watcher.dispatch();
}

obtener_lista(){
  HttpRequest.getString('/rest/granjas/granja_obtener_lista').then(llena_lista);
}

granja obtener_entidad(){
  granja p_granja = new granja();
  p_granja.clave = int.parse(query('#clave').value);
  p_granja.nombre = query('#nombre').value;

  return p_granja;
}

Map obtener_entidad_mapa(){
  Map p_map = new Map();

  p_map['clave'] = query('#clave').value;
  p_map['nombre'] = query('#nombre').value;

  return p_map;
}

limpia_edits(){
  query('#clave').value = '1';
  query('#nombre').value = '';

  query('#nombre').focus();
}

agregar(){

  granja p_granja = obtener_entidad();

  if (p_granja.nombre.length == 0){
    window.alert('Se necesita capturar el campo nombre');
    query('#nombre').focus();
  }

  var req = new HttpRequest();
  if (query('#btnAgregar').value == 'Agregar'){
    req.open('POST', '/rest/granjas/granja_insertar');
    req.setRequestHeader('Content-type', 'application/json');
    req.send(json.stringify(obtener_entidad_mapa()));
    req.onReadyStateChange.listen((data){
      if (req.readyState == HttpRequest.DONE && (req.status == 200 || req.status == 0)) {
        p_granja.clave = (json.parse(req.responseText))['clave'];
        lista_granja.add(p_granja);
        watcher.dispatch();
        limpia_edits();
      }
    });
  }
  else{
    req.open('PUT', '/rest/granjas/granja_actualizar');
    req.setRequestHeader('Content-type', 'application/json');
    req.send(json.stringify(obtener_entidad_mapa()));

    granja p_granja_tmp = lista_granja.where((x) => x.clave == p_granja.clave).toList()[0];
    actualiza_granja(p_granja_tmp, p_granja);

    query('#btnAgregar').value = 'Agregar';
    limpia_edits();
  }

  modo_insercion = true;
}

void actualiza_granja(granja p_granja_tmp, granja p_granja){
  p_granja_tmp.clave = p_granja.clave;
  p_granja_tmp.nombre = p_granja.nombre;
}

eliminar(granja a_granja){
  if (window.confirm('Â¿Eliminar registro?'))   {

    var req = new HttpRequest();
    req.open('DELETE', '/rest/granjas/granja_eliminar');
    req.setRequestHeader('Content-type', 'application/json');

    Map p_map = new Map();
    p_map['clave'] = a_granja.clave;

    req.send(json.stringify(p_map));
    lista_granja.remove(a_granja);

  }
}

cancelar(){
  limpia_edits();
  modo_insercion = true;
  query('#btnAgregar').value = 'Agregar';
}

despliega_clase(granja a_granja){
  query('#clave').value = a_granja.clave.toString();
  query('#nombre').value = a_granja.nombre.toString();
  query('#nombre').focus();
  query('#btnAgregar').value = 'Editar';
}

editar(granja a_granja){
  despliega_clase(a_granja);
  modo_insercion = false;
  window.scroll(0, 0);
}

main(){
  obtener_lista();
}
// Additional generated code
void init_autogenerated() {
  var _root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<th template="" instantiate="if modo_insercion &amp;&amp; permite_edicion"></th>'), __html1 = new autogenerated.Element.html('<tr template="" instantiate="if permite_edicion">\n            <th><input type="text" id="clave" value="0" disabled="disabled" style="width: 100px;"></th>\n            <th><input type="text" id="nombre" value="" style="width: 200px;"></th>\n            <th id="__e-6" style="display:none"></th>\n          </tr>'), __html2 = new autogenerated.Element.html('<th template="" instantiate="if permite_edicion"><input type="button" id="btnAgregar" value="Agregar"><template id="__e-4"></template></th>'), __html3 = new autogenerated.Element.html('<input type="button" id="btnCancelar" value="Cancelar">'), __html4 = new autogenerated.Element.html('<tr style="display:none"></tr>'), __html5 = new autogenerated.Element.html('<tr template="" instantiate="if modo_insercion">\n            <td id="__e-10"></td>\n            <td id="__e-12"></td>\n            <td id="__e-16" style="display:none"></td>\n          </tr>'), __html6 = new autogenerated.Element.html('<td template="" instantiate="if modo_insercion &amp;&amp; permite_edicion"><a href="#" class="boton_eliminar" id="__e-13">x</a>  <a href="#" class="boton_editar" id="__e-14">m</a></td>');
  var __e0, __e1, __e19, __e8;
  var __t = new autogenerated.Template(_root);
  __e0 = _root.query('#btnPermiteEdicion');
  __t.listen(__e0.onClick, ($event) { modificar(); });
  __e1 = _root.query('#__e-1');
  __t.conditional(__e1, () => modo_insercion && permite_edicion, (__t) {
  __t.add(__html0.clone(true));
  });

  __e8 = _root.query('#__e-8');
  __t.conditional(__e8, () => permite_edicion, (__t) {
    var __e6, __e7;
    __e7 = __html1.clone(true);
    __e6 = __e7.query('#__e-6');
    __t.conditional(__e6, () => permite_edicion, (__t) {
      var __e2, __e4, __e5;
      __e5 = __html2.clone(true);
      __e2 = __e5.query('#btnAgregar');
      __t.listen(__e2.onClick, ($event) { agregar(); });
      __e4 = __e5.query('#__e-4');
      __t.conditional(__e4, () => !modo_insercion, (__t) {
        var __e3;
        __e3 = __html3.clone(true);
        __t.listen(__e3.onClick, ($event) { cancelar(); });
      __t.add(__e3);
      });

    __t.add(__e5);
    });

  __t.add(__e7);
  });

  __e19 = _root.query('#__e-19');
  __t.loop(__e19, () => lista_granja, (item, __t) {
    var __e18;
    __e18 = __html4.clone(true);
    __t.conditional(__e18, () => modo_insercion, (__t) {
      var __e10, __e12, __e16, __e17;
      __e17 = __html5.clone(true);
      __e10 = __e17.query('#__e-10');
      var __binding9 = __t.contentBind(() => item.clave, false);
      __e10.nodes.add(__binding9);
      __e12 = __e17.query('#__e-12');
      var __binding11 = __t.contentBind(() => item.nombre, false);
      __e12.nodes.add(__binding11);
      __e16 = __e17.query('#__e-16');
      __t.conditional(__e16, () => modo_insercion && permite_edicion, (__t) {
        var __e13, __e14, __e15;
        __e15 = __html6.clone(true);
        __e13 = __e15.query('#__e-13');
        __t.listen(__e13.onClick, ($event) { eliminar(item);; });
        __e14 = __e15.query('#__e-14');
        __t.listen(__e14.onClick, ($event) { editar(item);; });
      __t.add(__e15);
      });

    __t.add(__e17);
    });

  __t.addAll([new autogenerated.Text('\n          '),
      __e18,
      new autogenerated.Text('\n        ')]);
  }, isTemplateElement: false);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=granjas.dart.map